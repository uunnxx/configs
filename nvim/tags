!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
#	custom_configs/maps.vim	/^vnoremap <silent> # :call VisualSelection('b', '')<CR>$/;"	m
&	custom_configs/maps.vim	/^nnoremap & %$/;"	m
*	custom_configs/maps.vim	/^vnoremap <silent> * :call VisualSelection('f', '')<CR>$/;"	m
+	custom_configs/functionality.vim	/^nnoremap + <C-a>$/;"	m
+	custom_configs/functionality.vim	/^vnoremap + g<C-a>gv$/;"	m
-	custom_configs/functionality.vim	/^nnoremap - <C-x>$/;"	m
-	custom_configs/functionality.vim	/^vnoremap - g<C-x>gv$/;"	m
/	custom_configs/maps.vim	/^map  \/ <Plug>(easymotion-sn)$/;"	m
/	custom_configs/maps.vim	/^omap \/ <Plug>(easymotion-tn)$/;"	m
0	custom_configs/maps.vim	/^nnoremap <silent> 0 g0$/;"	m
5	undo/%home%unx%.config%nvim%custom_configs%uu.js	/^VimüUnDoÂ/;"	c
5Å_––“—›ˇˇˇˇ∆ﬁV_D…9ı‹cnoremap	undo/%home%unx%.config%nvim%custom_configs%maps.vim	/^cnoremap  5Å_–/;"	m
;	custom_configs/maps.vim	/^nnoremap ; :$/;"	m
<BS>	custom_configs/maps.vim	/^nmap <silent><BS> <C-o>$/;"	m
<C-c>	custom_configs/maps.vim	/^map <C-c> :%y+ <bar>$/;"	m
<C-h>	custom_configs/maps.vim	/^nnoremap <C-h> :%s\/$/;"	m
<C-h>5Å_–KNL^ˇˇˇˇ\]_\ìÔ¶ı]_“imap	undo/%home%unx%.config%nvim%custom_configs%maps.vim	/^imap <C-h>5Å_–/;"	m
<C-n>	custom_configs/maps.vim	/^map <C-n> :EasyTreeToggle<CR>$/;"	m
<C-r>	custom_configs/functionality.vim	/^nmap <C-r> :redo<cr>$/;"	m
<F2>	custom_configs/maps.vim	/^map <F2> :silent update $MYVIMRC <bar> source $MYVIMRC <bar>$/;"	m
<F3>	custom_configs/maps.vim	/^map <F3> :tabnew $MYVIMRC <bar> tcd %:h<cr>$/;"	m
<F5>	custom_configs/maps.vim	/^map <F5> :set list!<cr>$/;"	m
<F6>	custom_configs/maps.vim	/^map <F6> :UndotreeToggle<cr>$/;"	m
<F7>	custom_configs/maps.vim	/^map <F7> :TagbarToggle<CR>$/;"	m
<M-h>	custom_configs/maps.vim	/^nnoremap <M-h> <C-W>h$/;"	m
<M-l>	custom_configs/maps.vim	/^nnoremap <M-l> <C-W>l$/;"	m
<S-CR>	custom_configs/maps.vim	/^nmap <S-CR> :Files<CR>$/;"	m
<S-TAB>	custom_configs/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	custom_configs/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<Tab>	custom_configs/maps.vim	/^noremap <Tab> gt$/;"	m
<c-space>	custom_configs/coc.vim	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<down>	custom_configs/maps.vim	/^ino <down> <Esc>ddpi$/;"	m
<down>	custom_configs/maps.vim	/^nnoremap <down>  :resize -1<CR>$/;"	m
<leader>*	custom_configs/maps.vim	/^nnoremap <leader>* :%s\/\\<<C-r><C-w>\\>\/\/<left>$/;"	m
<leader>*	custom_configs/maps.vim	/^vnoremap <leader>* "hy:%s\/\\V<C-r>h\/\/<left>$/;"	m
<leader><leader><space>	custom_configs/maps.vim	/^nmap <leader><leader><space> :%bd <bar> e# <bar> bd#<cr>$/;"	m
<leader>R	custom_configs/ruby.vim	/^map <leader>R :e doc\/README_FOR_APP<CR>$/;"	m
<leader>a	custom_configs/coc.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	custom_configs/coc.vim	/^nmap <leader>ac  <Plug>(coc-codeaction)$/;"	m
<leader>c	custom_configs/ruby.vim	/^map <leader>c :Rcontroller $/;"	m
<leader>cd	custom_configs/maps.vim	/^nnoremap <leader>cd :cd %:p:h<cr>:pwd<cr>$/;"	m
<leader>e	custom_configs/ruby.vim	/^map <leader>e :e <C-R>=expand("%:p:h") . "\/" <CR>$/;"	m
<leader>f	custom_configs/coc.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	custom_configs/ruby.vim	/^map <leader>f :Rfunctionaltest $/;"	m
<leader>j	custom_configs/maps.vim	/^nnoremap <leader>j <C-W>j$/;"	m
<leader>k	custom_configs/maps.vim	/^nnoremap <leader>k <C-W>k$/;"	m
<leader>m	custom_configs/ruby.vim	/^map <leader>m :Rmodel $/;"	m
<leader>nn	custom_configs/maps.vim	/^nnoremap  <leader>nn :call NumberToggle()<cr>$/;"	m
<leader>nt	custom_configs/maps.vim	/^nnoremap <leader>nt :set cursorline!<CR>$/;"	m
<leader>qf	custom_configs/coc.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>rn	custom_configs/coc.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>sc	custom_configs/ruby.vim	/^map <leader>sc :RScontroller $/;"	m
<leader>sf	custom_configs/ruby.vim	/^map <leader>sf :RSfunctionaltest $/;"	m
<leader>sm	custom_configs/ruby.vim	/^map <leader>sm :RSmodel $/;"	m
<leader>su	custom_configs/ruby.vim	/^map <leader>su :RSunittest $/;"	m
<leader>sv	custom_configs/ruby.vim	/^map <leader>sv :RSview $/;"	m
<leader>tc	custom_configs/ruby.vim	/^map <leader>tc :RTcontroller $/;"	m
<leader>te	custom_configs/ruby.vim	/^map <leader>te :tabe <C-R>=expand("%:p:h") . "\/" <CR>$/;"	m
<leader>tf	custom_configs/ruby.vim	/^map <leader>tf :RTfunctionaltest $/;"	m
<leader>tm	custom_configs/ruby.vim	/^map <leader>tm :RTmodel $/;"	m
<leader>tt	custom_configs/maps.vim	/^nmap <leader>tt :FZF<CR>$/;"	m
<leader>tu	custom_configs/ruby.vim	/^map <leader>tu :RTunittest $/;"	m
<leader>tv	custom_configs/ruby.vim	/^map <leader>tv :RTview $/;"	m
<leader>u	custom_configs/ruby.vim	/^map <leader>u :Runittest $/;"	m
<leader>v	custom_configs/ruby.vim	/^map <leader>v :Rview $/;"	m
<leader>ww	custom_configs/maps.vim	/^nnoremap <silent> <leader>ww :update<CR>$/;"	m
<left>	custom_configs/maps.vim	/^nnoremap <left>  :vertical resize +1<CR>$/;"	m
<nowait>	custom_configs/functionality.vim	/^nmap <nowait> <cr> :Buffer<cr>$/;"	m
<nowait>	custom_configs/maps.vim	/^nmap <nowait> <space>e :edit $/;"	m
<nowait>	custom_configs/maps.vim	/^nmap <nowait> <space>f :tabedit $/;"	m
<nowait>	custom_configs/maps.vim	/^nnoremap <nowait> H g^$/;"	m
<nowait>	custom_configs/maps.vim	/^nnoremap <nowait> L g_$/;"	m
<nowait>	custom_configs/maps.vim	/^nnoremap <nowait> cC I<Esc>C$/;"	m
<nowait>	custom_configs/maps.vim	/^nnoremap <nowait> dD I<Esc>D$/;"	m
<nowait><space><space>	custom_configs/maps.vim	/^nnoremap <nowait><space><space> <C-w>w$/;"	m
<right>	custom_configs/maps.vim	/^nnoremap <right> :vertical resize -1<CR>$/;"	m
<space>;	custom_configs/maps.vim	/^nnoremap <space>; q:$/;"	m
<space><cr>	custom_configs/maps.vim	/^nnoremap <silent> <space><cr> :noh<cr>$/;"	m
<space>O	custom_configs/functionality.vim	/^nnoremap <silent> <space>O :<C-u>call append(line(".")-1, repeat([""], v:count1))<CR>$/;"	m
<space>P¬†:r	custom_configs/functionality.vim	/^nmap <space>P¬†:r ~\/.vi_tmp<CR>$/;"	m
<space>Q	custom_configs/maps.vim	/^nnoremap <silent> <space>Q :qa<CR>$/;"	m
<space>X¬†:!echo	custom_configs/functionality.vim	/^nmap <space>X¬†:!echo ""> ~\/.vi_tmp<CR><CR>:w! ~\/.vi_tmp<CR>$/;"	m
<space>X¬†:w!	custom_configs/functionality.vim	/^vmap <space>X¬†:w! ~\/.vi_tmp<CR>gvd$/;"	m
<space>Y¬†:!echo	custom_configs/functionality.vim	/^nmap <space>Y¬†:!echo ""> ~\/.vi_tmp<CR><CR>:w! ~\/.vi_tmp<CR>$/;"	m
<space>Y¬†:w!	custom_configs/functionality.vim	/^vmap <space>Y¬†:w! ~\/.vi_tmp<CR>$/;"	m
<space>o	custom_configs/functionality.vim	/^nnoremap <silent> <space>o :<C-u>call append(line("."),   repeat([""], v:count1))<CR>$/;"	m
<space>qq	custom_configs/maps.vim	/^nnoremap <silent> <space>qq :x<CR>$/;"	m
<up>	custom_configs/maps.vim	/^ino <up> <Esc>ddkPi$/;"	m
<up>	custom_configs/maps.vim	/^nnoremap <up>    :resize +1<CR>$/;"	m
C	custom_configs/maps.vim	/^nnoremap C "_C$/;"	m
Cu	custom_configs/maps.vim	/^nmap Cu cf_$/;"	m
FF	custom_configs/maps.vim	/^nmap FF :Filetypes<cr>$/;"	m
Files	custom_configs/function.vim	/^command! -bang -nargs=? -complete=dir Files$/;"	c
G	custom_configs/maps.vim	/^nmap G Gzz$/;"	m
G	undo/%home%unx%.config%nvim%custom_configs%maps.vim	/^nmap G Gzz/;"	m
J	custom_configs/maps.vim	/^nnoremap J mjJ`j$/;"	m
K	custom_configs/coc.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
LightLineFileencoding	custom_configs/ui.vim	/^function! LightLineFileencoding()$/;"	f
LightLineFileformat	custom_configs/ui.vim	/^function! LightLineFileformat()$/;"	f
LightLineFilename	custom_configs/ui.vim	/^function! LightLineFilename()$/;"	f
LightLineFiletype	custom_configs/ui.vim	/^function! LightLineFiletype()$/;"	f
LightLineMode	custom_configs/ui.vim	/^function! LightLineMode()$/;"	f
LightLineModified	custom_configs/ui.vim	/^function! LightLineModified()$/;"	f
LightLineReadonly	custom_configs/ui.vim	/^function! LightLineReadonly()$/;"	f
Main	undo/%home%unx%workspace%python%first.py	/^/;"	c
N	custom_configs/maps.vim	/^nmap  N <Plug>(easymotion-prev)$/;"	m
N	custom_configs/maps.vim	/^nmap N Nzz$/;"	m
N	undo/%home%unx%.config%nvim%custom_configs%maps.vim	/^nmap N Nzz/;"	m
NumberToggle	custom_configs/function.vim	/^function! NumberToggle()$/;"	f
P	custom_configs/maps.vim	/^noremap P gP$/;"	m
RemoveAllConsoleLogs	custom_configs/js.vim	/^command! RemoveAllConsoleLogs call RemoveAllConsoleLogs()$/;"	c
RemoveAllConsoleLogs	custom_configs/js.vim	/^fun! RemoveAllConsoleLogs()$/;"	f
Rroutes	custom_configs/ruby.vim	/^command! Rroutes :e config\/routes.rb$/;"	c
Rschema	custom_configs/ruby.vim	/^command! Rschema :e db\/schema.rb$/;"	c
Symbol5	undo/%home%unx%bench.rb	/^def Symbol5Å_–/;"	f
Symbol5	undo/%home%unx%bench.rb	/^def Symbol5ÅÁ™/;"	f	class:Symbol5
TagbarStatusFunc	custom_configs/ui.vim	/^function! TagbarStatusFunc(current, sort, fname, ...) abort$/;"	f
W	undo/%home%unx%workspace%c%hello_world.c	/^VimüUnDoÂ/;"	v
\|	custom_configs/maps.vim	/^nnoremap \\| <C-^>$/;"	m
_	undo/%home%unx%workspace%c%basic%input.c	/^/;"	v
_init	undo/%home%unx%.config%nvim%custom_configs%uu.js	/^/;"	m	class:5
ac	custom_configs/coc.vim	/^omap ac <Plug>(coc-classobj-a)$/;"	m
accurate_syn_highlight	custom_configs/functionality.vim	/^augroup accurate_syn_highlight$/;"	a
af	custom_configs/coc.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
auto_read	custom_configs/functionality.vim	/^augroup auto_read$/;"	a
build_go_files	custom_configs/go.vim	/^function! s:build_go_files()$/;"	f
c	custom_configs/maps.vim	/^nnoremap c "_c$/;"	m
ca,	custom_configs/maps.vim	/^nmap ca, f,ld2F,i,<Esc>a$/;"	m
cc	custom_configs/maps.vim	/^nnoremap cc "_cc$/;"	m
check_back_space	custom_configs/coc.vim	/^function! s:check_back_space() abort$/;"	f
ci,	custom_configs/maps.vim	/^nmap ci, f,cT,$/;"	m
cs"	custom_configs/maps.vim	/^noremap cs" F"x,xi$/;"	m
cs'	custom_configs/maps.vim	/^noremap cs' F'x,xi$/;"	m
cs(	custom_configs/maps.vim	/^noremap cs( F(xf)xi$/;"	m
cs)	custom_configs/maps.vim	/^noremap cs) F(xf)xi$/;"	m
cs{	custom_configs/maps.vim	/^noremap cs{ F{xf}xi$/;"	m
cu	custom_configs/maps.vim	/^nmap cu ct_$/;"	m
da,	custom_configs/maps.vim	/^nmap da, f,ld2F,i,<Esc>l$/;"	m
di,	custom_configs/maps.vim	/^nmap di, f,dT,$/;"	m
ds"	custom_configs/maps.vim	/^noremap ds" F"x,x$/;"	m
ds'	custom_configs/maps.vim	/^noremap ds' F'x,x$/;"	m
ds(	custom_configs/maps.vim	/^noremap ds( F(xf)x$/;"	m
ds)	custom_configs/maps.vim	/^noremap ds) F(xf)x$/;"	m
ds{	custom_configs/maps.vim	/^noremap ds{ F{xf}x$/;"	m
each5	undo/%home%unx%workspace%ruby%books%basic_ruby_syntax%main.rb	/^  def each5Å_–/;"	f
endl	undo/%home%unx%workspace%cpp%hello%main.cpp	/^/;"	m	class:std	file:
endl	undo/%home%unx%workspace%cpp%hello%main.cpp	/^/;"	v
eu	custom_configs/maps.vim	/^inoremap <silent>eu <Esc>$/;"	m
fib	undo/%home%unx%workspace%python%new%fib.py	/^/;"	f
filetype_ruby	custom_configs/ruby.vim	/^augroup filetype_ruby$/;"	a
g:AutoPairs	custom_configs/maps.vim	/^let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '```':'```', '"""':'"""', "'''":"'''", "`":"`", "<":">"}$/;"	v
g:EasyMotion_do_mapping	custom_configs/function.vim	/^let g:EasyMotion_do_mapping = 0 " Disable default mappings$/;"	v
g:EasyMotion_smartcase	custom_configs/function.vim	/^let g:EasyMotion_smartcase = 1$/;"	v
g:EasyMotion_startofline	custom_configs/function.vim	/^let g:EasyMotion_startofline = 0 " keep cursor column when JK motion$/;"	v
g:EasyMotion_use_smartsign_us	custom_configs/function.vim	/^let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:ale_completion_enabled	custom_configs/function.vim	/^let g:ale_completion_enabled = 1$/;"	v
g:ale_fix_on_save	custom_configs/function.vim	/^let g:ale_fix_on_save = 1$/;"	v
g:ale_fixers	custom_configs/function.vim	/^let g:ale_fixers = {$/;"	v
g:ale_linters	custom_configs/function.vim	/^let g:ale_linters = {$/;"	v
g:ale_sign_column_always	custom_configs/function.vim	/^let g:ale_sign_column_always = 1$/;"	v
g:ale_sign_error	custom_configs/function.vim	/^let g:ale_sign_error = 'Óà± '$/;"	v
g:ale_sign_warning	custom_configs/function.vim	/^let g:ale_sign_warning = 'Óà∏ '$/;"	v
g:config_files	init.vim	/^let g:config_files = [$/;"	v
g:easytree_show_hidden_files	custom_configs/maps.vim	/^let g:easytree_show_hidden_files=1$/;"	v
g:fzf_buffers_jump	custom_configs/function.vim	/^let g:fzf_buffers_jump = 1$/;"	v
g:fzf_commands_expect	custom_configs/function.vim	/^let g:fzf_commands_expect = 'alt-enter,ctrl-x'$/;"	v
g:fzf_commits_log_options	custom_configs/function.vim	/^let g:fzf_commits_log_options = '--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr"'$/;"	v
g:fzf_tags_command	custom_configs/function.vim	/^let g:fzf_tags_command = 'ctags -R'$/;"	v
g:gitgutter_diff_args	custom_configs/function.vim	/^let g:gitgutter_diff_args = '-w'$/;"	v
g:gitgutter_eager	custom_configs/function.vim	/^let g:gitgutter_eager = 1$/;"	v
g:gitgutter_highlight_linenrs	custom_configs/function.vim	/^let g:gitgutter_highlight_linenrs = 1$/;"	v
g:gitgutter_max_signs	custom_configs/function.vim	/^let g:gitgutter_max_signs = 1500$/;"	v
g:gitgutter_realtime	custom_configs/function.vim	/^let g:gitgutter_realtime = 1$/;"	v
g:gitgutter_sign_added	custom_configs/function.vim	/^let g:gitgutter_sign_added = '+'$/;"	v
g:gitgutter_sign_modified	custom_configs/function.vim	/^let g:gitgutter_sign_modified = '~'$/;"	v
g:gitgutter_sign_modified_removed	custom_configs/function.vim	/^let g:gitgutter_sign_modified_removed = ':'$/;"	v
g:gitgutter_sign_removed	custom_configs/function.vim	/^let g:gitgutter_sign_removed = '-'$/;"	v
g:gitgutter_sign_removed_first_line	custom_configs/function.vim	/^let g:gitgutter_sign_removed_first_line = '^'$/;"	v
g:go_addtags_transform	custom_configs/function.vim	/^let g:go_addtags_transform = "snakecase"$/;"	v
g:go_auto_sameids	custom_configs/function.vim	/^let g:go_auto_sameids = 0$/;"	v
g:go_auto_sameids	custom_configs/go.vim	/^let g:go_auto_sameids = 0$/;"	v
g:go_auto_type_info	custom_configs/function.vim	/^let g:go_auto_type_info = 1$/;"	v
g:go_auto_type_info	custom_configs/go.vim	/^let g:go_auto_type_info = 1$/;"	v
g:go_fmt_command	custom_configs/function.vim	/^let g:go_fmt_command = "goimports"$/;"	v
g:go_fmt_command	custom_configs/go.vim	/^let g:go_fmt_command = "goimports"$/;"	v
g:go_highlight_build_constraints	custom_configs/function.vim	/^let g:go_highlight_build_constraints = 1$/;"	v
g:go_highlight_build_constraints	custom_configs/go.vim	/^let g:go_highlight_build_constraints = 1$/;"	v
g:go_highlight_extra_types	custom_configs/function.vim	/^let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_extra_types	custom_configs/go.vim	/^let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_fields	custom_configs/function.vim	/^let g:go_highlight_fields = 1$/;"	v
g:go_highlight_fields	custom_configs/go.vim	/^let g:go_highlight_fields = 1$/;"	v
g:go_highlight_functions	custom_configs/function.vim	/^let g:go_highlight_functions = 1$/;"	v
g:go_highlight_functions	custom_configs/go.vim	/^let g:go_highlight_functions = 1$/;"	v
g:go_highlight_methods	custom_configs/function.vim	/^let g:go_highlight_methods = 1$/;"	v
g:go_highlight_methods	custom_configs/go.vim	/^let g:go_highlight_methods = 1$/;"	v
g:go_highlight_operators	custom_configs/function.vim	/^let g:go_highlight_operators = 1$/;"	v
g:go_highlight_operators	custom_configs/go.vim	/^let g:go_highlight_operators = 1$/;"	v
g:go_highlight_structs	custom_configs/function.vim	/^let g:go_highlight_structs = 1$/;"	v
g:go_highlight_types	custom_configs/function.vim	/^let g:go_highlight_types = 1$/;"	v
g:go_highlight_types	custom_configs/go.vim	/^let g:go_highlight_types = 1$/;"	v
g:go_list_type	custom_configs/go.vim	/^let g:go_list_type = "quickfix"$/;"	v
g:gruvbox_contrast_dark	custom_configs/ui.vim	/^let g:gruvbox_contrast_dark = 'hard'$/;"	v
g:gruvbox_italic	custom_configs/ui.vim	/^let g:gruvbox_italic=1$/;"	v
g:indentLine_char_list	init.vim	/^let g:indentLine_char_list = ['|', '¬¶', '‚îÜ', '‚îä']$/;"	v
g:jedi#completions_enabled	custom_configs/function.vim	/^let g:jedi#completions_enabled = 0$/;"	v
g:jedi#use_splits_not_buffers	custom_configs/function.vim	/^let g:jedi#use_splits_not_buffers = "right"$/;"	v
g:lightline	custom_configs/ui.vim	/^let g:lightline = {$/;"	v
g:lightline	custom_configs/ui.vim	/^let g:lightline.component_expand = {$/;"	v
g:lightline	custom_configs/ui.vim	/^let g:lightline.component_type = {$/;"	v
g:lightline	custom_configs/ui.vim	/^let g:lightline.tabline = {$/;"	v
g:lightline#ale#indicator_checking	custom_configs/ui.vim	/^let g:lightline#ale#indicator_checking = "\\uf110 "$/;"	v
g:lightline#ale#indicator_errors	custom_configs/ui.vim	/^let g:lightline#ale#indicator_errors = "\\uf05e "$/;"	v
g:lightline#ale#indicator_infos	custom_configs/ui.vim	/^let g:lightline#ale#indicator_infos = "\\uf129 "$/;"	v
g:lightline#ale#indicator_ok	custom_configs/ui.vim	/^let g:lightline#ale#indicator_ok = "\\uf00c "$/;"	v
g:lightline#ale#indicator_warnings	custom_configs/ui.vim	/^let g:lightline#ale#indicator_warnings = "\\uf071 "$/;"	v
g:mapleadre	custom_configs/maps.vim	/^let g:mapleadre =","$/;"	v
g:neoformat_basic_format_align	custom_configs/function.vim	/^let g:neoformat_basic_format_align = 1$/;"	v
g:neoformat_basic_format_retab	custom_configs/function.vim	/^let g:neoformat_basic_format_retab = 1$/;"	v
g:neoformat_basic_format_trim	custom_configs/function.vim	/^let g:neoformat_basic_format_trim = 1$/;"	v
g:nvim_config_root	init.vim	/^let g:nvim_config_root = expand('<sfile>:p:h')$/;"	v
g:rubycomplete_buffer_loading	custom_configs/ruby_settings.vim	/^let g:rubycomplete_buffer_loading = 1$/;"	v
g:rubycomplete_rails	custom_configs/ruby_settings.vim	/^let g:rubycomplete_rails = 1$/;"	v
g:tagbar_status_func	custom_configs/ui.vim	/^let g:tagbar_status_func = 'TagbarStatusFunc'$/;"	v
g:user_emmet_leader_key	custom_configs/maps.vim	/^let g:user_emmet_leader_key=','$/;"	v
g:vim_json_syntax_conceal	custom_configs/function.vim	/^let g:vim_json_syntax_conceal = 0$/;"	v
gP	custom_configs/maps.vim	/^noremap gP P$/;"	m
gV	custom_configs/maps.vim	/^nnoremap gV `[v`]$/;"	m
gd	custom_configs/coc.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gf	custom_configs/maps.vim	/^nmap gf <C-]>$/;"	m
gi	custom_configs/coc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gp	custom_configs/maps.vim	/^noremap gp p$/;"	m
gr	custom_configs/coc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	custom_configs/coc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
i3config_ft_detection	custom_configs/ui.vim	/^aug i3config_ft_detection$/;"	a
ic	custom_configs/coc.vim	/^omap ic <Plug>(coc-classobj-i)$/;"	m
if	custom_configs/coc.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
j	custom_configs/maps.vim	/^nnoremap <expr> j (v:count == 0 ? 'gj' : 'j')$/;"	m
k	custom_configs/maps.vim	/^nnoremap <expr> k (v:count == 0 ? 'gk' : 'k')$/;"	m
kZ	undo/%home%unx%workspace%c%pi2.c	/^VimüUnDoÂ/;"	v
launch	undo/%home%unx%workspace%python%first.py	/^/;"	f
main	undo/%home%unx%workspace%go%pt.go	/^/;"	f
main	undo/%home%unx%workspace%go%tp.go	/^/;"	f
main	undo/%home%unx%workspace%go%tp.go	/^VimüUnDoÂ/;"	f
mapleader	custom_configs/maps.vim	/^let mapleader = ","$/;"	v
n	custom_configs/maps.vim	/^nmap  n <Plug>(easymotion-next)$/;"	m
n	custom_configs/maps.vim	/^nmap n nzz$/;"	m
n	undo/%home%unx%.config%nvim%custom_configs%maps.vim	/^nmap n nzz/;"	m
next	undo/%home%unx%test.rb	/^  def next/;"	f
next	undo/%home%unx%workspace%ruby%confident_ruby%main.rb	/^  def next/;"	f
no_buffer_menu	custom_configs/ui.vim	/^let no_buffer_menu=1$/;"	v
non_utf8_file_warn	custom_configs/functionality.vim	/^augroup non_utf8_file_warn$/;"	a
p	custom_configs/maps.vim	/^noremap p gp$/;"	m
resume_edit_position	custom_configs/functionality.vim	/^augroup resume_edit_position$/;"	a
ruby_fold	custom_configs/ruby.vim	/^  let ruby_fold = 1$/;"	v
ruby_operators	custom_configs/ruby.vim	/^  let ruby_operators = 1$/;"	v
ruby_space_errors	custom_configs/ruby.vim	/^  let ruby_space_errors = 1$/;"	v
s	undo/%home%unx%workspace%cpp%hello%main.cpp	/^VimüUnDoÂ/;"	v
show_documentation	custom_configs/coc.vim	/^function! s:show_documentation()$/;"	f
ss	custom_configs/maps.vim	/^nmap ss <Plug>(easymotion-overwin-f2)$/;"	m
str_a	undo/%home%unx%workspace%the_art_of_exploit%char_array.c	/^/;"	v
str_a	undo/%home%unx%workspace%the_art_of_exploit%char_array.c	/^A[ËÎ˝_ﬁà#BotXi¬©]^u®KgCªÖ/;"	v
term_settings	custom_configs/functionality.vim	/^augroup term_settings$/;"	a
test	undo/%home%unx%workspace%python%second.py	/^    d = 88/;"	f	function:test
test	undo/%home%unx%workspace%python%second.py	/^VimüUnDoÂ/;"	f
tile	undo/%home%unx%workspace%cpp%2048%2048.cpp	/^/;"	f
yy	custom_configs/maps.vim	/^vmap yy "+y$/;"	m
{	custom_configs/maps.vim	/^nmap { {zz$/;"	m
{	undo/%home%unx%.config%nvim%custom_configs%maps.vim	/^nmap { {zz/;"	m
{c	custom_configs/coc.vim	/^nmap <silent> {c <Plug>(coc-diagnostic-prev)$/;"	m
}	custom_configs/maps.vim	/^nmap } }zz$/;"	m
}	undo/%home%unx%.config%nvim%custom_configs%maps.vim	/^nmap } }zz/;"	m
}c	custom_configs/coc.vim	/^nmap <silent> }c <Plug>(coc-diagnostic-next)$/;"	m
